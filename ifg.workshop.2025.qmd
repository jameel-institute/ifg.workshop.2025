---
title: "Pandemic projections"
author: 
  - "Imperial College London"
format: revealjs
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
# install dev versions of packages
# pak::pak("jameel-institute/daedalus@develop")
# pak::pak("jameel-institute/daedalus.compare@develop")
library(daedalus)
library(daedalus.compare)

library(dplyr)
library(ggplot2)
library(ggdist)
```

```{r}
x_label_days <- "Days after first case"
measure_levels <- c(
  "daily_infections", "daily_hospitalisations",
  "total_hosp", "daily_deaths"
)
```

```{r}
zzz <- daedalus_infection("influenza_2009")
disease_list <- withr::with_seed(
  1,
  make_infection_samples(
    "influenza_2009",
    samples = 100,
    param_distributions = list(
      # r0 = distributional::dist_beta(2, 5),
      gamma_Is = distributional::dist_beta(2, 5),
      gamma_Ia = distributional::dist_beta(2, 5),
      eta = distributional::dist_beta(2, 5),
      omega = distributional::dist_beta(2, 5)
    ),
    param_ranges = list(
      # r0 = c(1.0, 2.0),
      gamma_Is = c(0.1, 0.7),
      gamma_Ia = c(0.1, 0.7),
      eta = c(0.003, 0.006),
      omega = c(0.0005, 0.1)
    )
  )
)
disease_tags <- glue::glue("sample_{seq_along(disease_list)}")
```

```{r echo=FALSE, include=FALSE}
# get 95% confidence intervals around R0
# ci_95 <- ci(r0_samples)
#
# r0_summary <- c(
#   lower = median(r0_samples) - ci_95,
#   median = median(r0_samples),
#   upper = median(r0_samples) + ci_95
# )
# r0_summary <- round(r0_summary, 3)
```

```{r echo=FALSE, include=FALSE}
# prepare outcomes for two scenarios
output <- run_scenarios(
  "GBR",
  disease_list,
  response = c(
    "none", "school_closures",
    "economic_closures", "elimination"
  ),
  response_time_start = 8, response_time_end = 90,
  duration = 60
)
```

```{r echo=FALSE, include=FALSE}
# get epi curve data and prepare for plotting
data_epi_curve <- get_epicurve_data(output, disease_tags, format = "long")

ggplot(data_epi_curve[data_epi_curve$measure == "daily_infections", ]) +
  geom_line(
    aes(time, value, group = tag),
    linewidth = 0.2
  ) +
  facet_wrap(~response)

data_epi_curve <- group_by(
  data_epi_curve, time, response, measure
) %>%
  curve_interval(
    value,
    .width = c(0.5, 0.95)
  )
```

```{r echo=FALSE, include=FALSE}
data_epi_curve_unmit <- filter(
  data_epi_curve, response == "none"
)
```

```{r echo=FALSE, include=FALSE}
data_epi_summary <- get_summary_data(output, disease_tags, format = "long")
```

```{r echo=FALSE, include=FALSE}
data_deaths <- get_summary_data(
  output, disease_tags,
  format = "long", measures = "deaths", groups = "age_group"
)
```

```{r}
data_deaths_unmit <- filter(data_deaths, response == "none")
```

```{r echo=FALSE, include=FALSE}
data_cost_output <- get_cost_data(output, disease_tags, format = "long")

data_cost_life <- filter(data_cost_output, domain == "life_years")
```

```{r echo=FALSE, include=FALSE}
# NOTE: education costs are very similar across R0
# as the main component is future earnings lost due to school closures;
# this aspect is deterministic: value school year * closure duration;
# summaring this as a median to show a bar chart
data_cost_edu <- filter(data_cost_output, domain == "education") %>%
  summarise(
    cost = median(cost), .by = "response"
  )
```

```{r echo=FALSE, include=FALSE}
data_econ_costs <- get_econ_cost_data(output)

# separate data on closures (deterministic) from absences
# and summarise closure costs using median
data_econ_cost_closures <- filter(
  data_econ_costs, cost_type == "economic_cost_closures"
) %>%
  group_by(response) %>%
  summarise(cost = median(cost))

data_econ_cost_absences <- filter(
  data_econ_costs, cost_type == "economic_cost_absences"
)
```

# Introduction

## What we know

-   Median $R_0$: `r median(r0_summary)`

-   Lower and upper $R_0$ estimates: `r glue::glue("({r0_summary['lower']}, {r0_summary['upper']})")`

```{r echo=FALSE}
# ggplot() +
#   stat_histinterval(aes(r0_samples)) +
#   labs(
#     title = "Uncertainty in R0",
#     x = "R0", y = NULL
#   ) +
#   theme_light()
```

# Unmitigated pandemic

## Epidemic projections

```{r echo=FALSE, include=FALSE}
curve_measure_labels <- c(
  daily_deaths = "New deaths",
  daily_hospitalisations = "New hospital demand",
  daily_infections = "New infections",
  total_hosp = "Total hospital demand"
)
```

```{r echo=FALSE}
ggplot(
  data_epi_curve_unmit,
  aes(time, value)
) +
  geom_lineribbon(
    aes(ymin = .lower, ymax = .upper),
    linewidth = 0.1,
    col = "black",
    alpha = 0.8
  ) +
  facet_wrap(
    facets = vars(measure),
    scales = "free",
    labeller = labeller(
      measure = curve_measure_labels
    )
  ) +
  scale_fill_brewer(
    palette = "YlOrRd",
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  labs(
    x = x_label_days,
    y = NULL,
    fill = "Conf. interv.",
    caption = "All values are daily."
  ) +
  theme_light()
```

## Infections, hospital demand, deaths

```{r echo=FALSE}
data_epi_summary_unmit <- filter(
  data_epi_summary, response == "none"
)
```

```{r echo=FALSE}
summary_measure_labels <- c(
  epidemic_size = "Cumulative infections",
  total_deaths = "Cumulative deaths",
  total_hospitalisations = "Cumulative hospital demand"
)
```

```{r echo=FALSE}
ggplot(data_epi_summary_unmit) +
  stat_interval(
    aes(
      y = value,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = value)
  ) +
  facet_wrap(
    facets = vars(measure),
    labeller = labeller(
      measure = summary_measure_labels
    ),
    scales = "free"
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  scale_colour_brewer(
    palette = "YlOrRd",
    direction = 1,
    breaks = c("0.5", "0.95"),
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    x = NULL,
    y = "Count",
    colour = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Deaths by age group

```{r echo=FALSE}
ggplot(data_deaths_unmit) +
  stat_interval(
    aes(
      y = value,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = value)
  ) +
  facet_wrap(
    facets = vars(age_group),
    scales = "free",
    labeller = label_both
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  scale_color_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    y = "Count",
    x = NULL,
    colour = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Lost life years, future earnings, and GVA

```{r echo=FALSE}
data_cost_output_unmit <- filter(
  data_cost_output, response == "none"
)
```

```{r echo=FALSE}
loss_measure_labels <- c(
  "GVA", "Future earnings", "Life years"
)
```

```{r echo=FALSE}
ggplot(data_cost_output_unmit) +
  stat_interval(
    aes(
      x = domain, y = cost,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(domain, cost)
  ) +
  scale_x_discrete(
    labels = loss_measure_labels
  ) +
  scale_y_continuous(
    labels = scales::label_currency(
      scale = 1e-3, prefix = "$", suffix = " B"
    )
  ) +
  scale_color_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    x = NULL,
    y = "Cumulative value lost in billion $",
    col = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Economic losses break-down

```{r}
data_econ_cost_absences_unmit <- filter(
  data_econ_cost_absences, response == "none"
)
```

```{r}
ggplot(data_econ_cost_absences_unmit) +
  stat_interval(
    aes(
      y = cost,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = cost)
  ) +
  scale_y_continuous(
    labels = scales::label_currency(
      scale = 1e-3, prefix = "$", suffix = " B"
    )
  ) +
  scale_colour_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    y = "Value lost in billion $",
    x = NULL,
    colour = "Conf. interv.",
    caption = "All values are cumulative over 100 days.",
    title = "Economic losses due to illness-related absences and deaths"
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

-   No GVA loss due to mitigation measures

# Mitigation measures

## Epidemic projections

```{r}
response_labels <- c(
  none = "Unmitigated",
  economic_closures = "Business closures",
  elimination = "Elimination",
  school_closures = "School closures"
)
```

```{r echo=FALSE}
# plot uncertainty around epi curves
ggplot(
  data_epi_curve,
  aes(time, value)
) +
  geom_lineribbon(
    aes(ymin = .lower, ymax = .upper),
    linewidth = 0.1,
    col = "black",
    alpha = 0.8
  ) +
  scale_fill_brewer(
    palette = "YlOrRd",
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  facet_grid(
    measure ~ response,
    scales = "free",
    labeller = labeller(
      measure = curve_measure_labels,
      response = response_labels
    )
  ) +
  labs(
    x = x_label_days,
    y = NULL,
    fill = "Conf. interv.",
    caption = "All values are daily."
  ) +
  theme_ggdist()
```

## Infections, hospital demand, deaths

```{r echo=FALSE}
# plot uncertainty in epi outcomes
ggplot(data_epi_summary) +
  stat_interval(
    aes(
      y = value,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = value)
  ) +
  facet_grid(
    measure ~ response,
    labeller = labeller(
      measure = summary_measure_labels,
      response = response_labels
    ),
    scales = "free"
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  scale_colour_brewer(
    palette = "YlOrRd",
    direction = 1,
    breaks = c("0.5", "0.95"),
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    x = NULL,
    y = "Count",
    colour = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Deaths by age group

```{r}
ggplot(data_deaths) +
  stat_interval(
    aes(
      y = value,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = value)
  ) +
  facet_grid(
    age_group ~ response,
    scales = "free",
    labeller = labeller(
      response = response_labels
    )
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  scale_colour_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    y = "Count",
    x = NULL,
    colour = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Lost life years, future earnings, and GVA

```{r}
ggplot(data_cost_output) +
  stat_interval(
    aes(
      x = domain, y = cost,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(domain, cost)
  ) +
  facet_grid(
    cols = vars(response),
    labeller = labeller(
      response = response_labels
    )
  ) +
  scale_x_discrete(
    labels = loss_measure_labels
  ) +
  scale_y_continuous(
    labels = scales::label_currency(
      scale = 1e-3, prefix = "$", suffix = " B"
    )
  ) +
  scale_color_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    x = NULL,
    y = "Cumulative value lost in billion $",
    col = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Economic losses: Absences

```{r}
ggplot(data_econ_cost_absences) +
  stat_interval(
    aes(
      y = cost,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = cost)
  ) +
  facet_grid(
    cols = vars(response),
    labeller = labeller(
      response = response_labels
    )
  ) +
  scale_y_continuous(
    labels = scales::label_currency(
      scale = 1e-3, prefix = "$", suffix = " B"
    )
  ) +
  scale_colour_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    y = "Value lost in billion $",
    x = NULL,
    colour = "Conf. interv.",
    caption = glue::glue(
      "All values are cumulative over 100 days.
      Illness related absences assume that both symptomatic and asymptomatic
      individuals are unable to work.
      "
    ),
    title = "Economic losses due to illness-related absences and deaths"
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Economic losses: Closures

```{r}
ggplot(data_econ_cost_closures) +
  geom_col(
    aes(response, cost, fill = response),
    show.legend = FALSE
  ) +
  scale_x_discrete(
    name = "Mitigation response",
    labels = response_labels
  ) +
  scale_y_continuous(
    labels = scales::label_currency(
      scale = 1e-3, suffix = "B"
    ),
    name = "Value lost in billion $"
  ) +
  scale_fill_brewer(
    palette = "Dark2"
  ) +
  theme_light() +
  labs(
    caption = "All values are cumulative over 100 days.",
    title = "Economic losses due to mitigation measures"
  )
```

# Stage 2: Choosing a response

```{r}
response <- "economic_closures"
time_start <- 21
time_end <- 60

output <- run_scenarios(
  "GBR",
  disease_list,
  response = response,
  response_time_start = time_start, response_time_end = time_end,
  duration = 100
)
```

```{r echo=FALSE, include=FALSE}
# get epi curve data and prepare for plotting
data_epi_curve <- get_epicurve_data(output, disease_tags, format = "long")

data_epi_curve <- group_by(
  data_epi_curve, time, response, measure
) %>%
  curve_interval(
    value,
    .width = c(0.5, 0.95)
  )
```

```{r echo=FALSE, include=FALSE}
data_epi_summary <- get_summary_data(output, disease_tags, format = "long")
```

```{r echo=FALSE, include=FALSE}
data_deaths <- get_summary_data(
  output, disease_tags,
  format = "long", measures = "deaths", groups = "age_group"
)
```

```{r echo=FALSE, include=FALSE}
data_cost_output <- get_cost_data(output, disease_tags, format = "long")

data_cost_life <- filter(data_cost_output, domain == "life_years")
```

```{r echo=FALSE, include=FALSE}
# NOTE: education costs are very similar across R0
# as the main component is future earnings lost due to school closures;
# this aspect is deterministic: value school year * closure duration;
# summaring this as a median to show a bar chart
data_cost_edu <- filter(data_cost_output, domain == "education") %>%
  summarise(
    cost = median(cost), .by = "response"
  )
```

```{r echo=FALSE, include=FALSE}
data_econ_costs <- get_econ_cost_data(output)

# separate data on closures (deterministic) from absences
# and summarise closure costs using median
data_econ_cost_closures <- filter(
  data_econ_costs, cost_type == "economic_cost_closures"
) %>%
  group_by(response) %>%
  summarise(cost = median(cost))

data_econ_cost_absences <- filter(
  data_econ_costs, cost_type == "economic_cost_absences"
)
```

## Epidemic projections

```{r echo=FALSE}
ggplot(
  data_epi_curve,
  aes(time, value)
) +
  geom_lineribbon(
    aes(ymin = .lower, ymax = .upper),
    linewidth = 0.1,
    col = "black",
    alpha = 0.8
  ) +
  facet_wrap(
    facets = vars(measure),
    scales = "free",
    labeller = labeller(
      measure = curve_measure_labels
    )
  ) +
  scale_fill_brewer(
    palette = "YlOrRd",
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  labs(
    x = x_label_days,
    y = NULL,
    fill = "Conf. interv.",
    caption = "All values are daily."
  ) +
  theme_light()
```

## Infections, hospital demand, deaths

```{r echo=FALSE}
ggplot(data_epi_summary) +
  stat_interval(
    aes(
      y = value,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = value)
  ) +
  facet_wrap(
    facets = vars(measure),
    labeller = labeller(
      measure = summary_measure_labels
    ),
    scales = "free"
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  scale_colour_brewer(
    palette = "YlOrRd",
    direction = 1,
    breaks = c("0.5", "0.95"),
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    x = NULL,
    y = "Count",
    colour = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Deaths by age group

```{r echo=FALSE}
ggplot(data_deaths) +
  stat_interval(
    aes(
      y = value,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = value)
  ) +
  facet_wrap(
    facets = vars(age_group),
    scales = "free",
    labeller = label_both
  ) +
  scale_y_continuous(
    labels = scales::comma
  ) +
  scale_color_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    y = "Count",
    x = NULL,
    colour = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Lost life years, future earnings, and GVA

```{r echo=FALSE}
ggplot(data_cost_output) +
  stat_interval(
    aes(
      x = domain, y = cost,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(domain, cost)
  ) +
  scale_x_discrete(
    labels = loss_measure_labels
  ) +
  scale_y_continuous(
    labels = scales::label_currency(
      scale = 1e-3, prefix = "$", suffix = " B"
    )
  ) +
  scale_color_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    x = NULL,
    y = "Cumulative value lost in billion $",
    col = "Conf. interv.",
    caption = "All values are cumulative over 100 days."
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Economic losses: Absences

```{r}
ggplot(data_econ_cost_absences) +
  stat_interval(
    aes(
      y = cost,
      color = after_stat(
        level
      )
    ),
    .width = c(0.5, 0.95),
    linewidth = 30,
    normalize = "groups"
  ) +
  stat_pointinterval(
    aes(y = cost)
  ) +
  scale_y_continuous(
    labels = scales::label_currency(
      scale = 1e-3, prefix = "$", suffix = " B"
    )
  ) +
  scale_colour_brewer(
    palette = "YlOrRd",
    direction = 1,
    labels = function(x) {
      scales::percent(as.numeric(x))
    }
  ) +
  labs(
    y = "Value lost in billion $",
    x = NULL,
    colour = "Conf. interv.",
    caption = "All values are cumulative over 100 days.",
    title = "Economic losses due to illness-related absences and deaths"
  ) +
  guides(
    colour = guide_legend(
      override.aes = list(linewidth = 3)
    )
  ) +
  theme_light()
```

## Economic losses: Closures

```{r}
ggplot(data_econ_cost_closures) +
  geom_col(
    aes(response, cost, fill = response),
    show.legend = FALSE
  ) +
  scale_x_discrete(
    name = "Mitigation response",
    labels = response_labels
  ) +
  scale_y_continuous(
    labels = scales::label_currency(
      scale = 1e-3, suffix = "B"
    ),
    name = "Value lost in billion $"
  ) +
  scale_fill_brewer(
    palette = "Dark2"
  ) +
  theme_light() +
  labs(
    caption = "All values are cumulative over 100 days.",
    title = "Economic losses due to mitigation measures"
  )
```
